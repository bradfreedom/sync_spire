# Sourced variables for shell script  sync_spire 
# Be aware that all errors and stdout lines will all be blocked (routed to dev/null by the main script)

#notice the bash-style of this config file.  

# take special notice that in assignments  :
    #left side contains variable name with no special braces , 
    #equal sign with no spaces 
    #right side reference variables with the bash-style ${var} format
    #          and you must use quotes because all variables are considered strings

#further directory read/writeability sanity checks will be done at runtime. 
#although initial checks are later in this file 

#default  output directories
DEST_DIR="/media/bradbao/bradbak/phoneBackup"  
FILTER_DUMP_DIR="${DEST_DIR}/dumpOfFilteredFiles"
FULL_RAW_BACKUP_DEST_DIR="${DEST_DIR}/fullRAWphoneBackup"

PICTURES_DIR="${DEST_DIR}/pictures"
VIDEOS_DIR="${DEST_DIR}/videos"
COMPRESSED_PICS_DIR="${DEST_DIR}/compressedPics" 
COMPRESSED_VIDS_DIR="${DEST_DIR}/compressedVids"   
ZALO_DIR="${DEST_DIR}/zaloDL" 
SIGNAL_DIR="${DEST_DIR}/signalDL"
SCREENSHOTS_DIR="${DEST_DIR}/screenShots"
TRIP_RECORDINGS_DIR="${DEST_DIR}/tripRecordings" 
AUDIO_RECORDINGS_DIR="${DEST_DIR}/recordings" 
NOTES_DIR="${DEST_DIR}/notes"
NOTES_ARCHIVE="${NOTES_DIR}/notes_archive"
SRC_NOTES_DIR="${DEST_DIR}/notes"

SUBS_DIR="${DEST_DIR}/subscriptions"
    
LOG_FILENAME="${DEST_DIR}/logs/backup.summary.$(date +'%Y-%m-%d').log"  

#default source location  (that of the phone itself in this case) 

#BASE_MTP="mtp:host=samsung_SM-G975F_R58M30R90LE"  
BASE_MTP='mtp:host=Sony_Xperia_XZ3_DA7200H507'  
PATH_TO_MTP_MOUNTS='/run/user/1000/gvfs/' 
PHONE_DIR="${PATH_TO_MTP_MOUNTS}${BASE_MTP}"

SRC_NOTES_DIR="${PHONE_DIR}/Internal shared storage/Documents/notes"



[[ -r $FULL_RAW_BACKUP_DEST_DIR ]] || mkdir --parents --verbose "${FULL_RAW_BACKUP_DEST_DIR}"
[[ -r $DEST_DIR ]]                 || mkdir --parents --verbose "${DEST_DIR}"
[[ -r $FILTER_DUMP_DIR ]]          || mkdir --parents --verbose "${FILTER_DUMP_DIR}"
[[ -r $PICTURES_DIR ]]             || mkdir --parents --verbose "${PICTURES_DIR}"
[[ -r $COMPRESSED_PICS_DIR ]]      || mkdir --parents --verbose "${COMPRESSED_PICS_DIR}"
[[ -r $COMPRESSED_VIDS_DIR ]]      || mkdir --parents --verbose "${COMPRESSED_VIDS_DIR}"
[[ -r $ZALO_DIR ]]                 || mkdir --parents --verbose "${ZALO_DIR}"
[[ -r $SIGNAL_DIR ]]               || mkdir --parents --verbose "${SIGNAL_DIR}"
[[ -r $SCREENSHOTS_DIR ]]          || mkdir --parents --verbose "${SCREENSHOTS_DIR}"
[[ -r $VIDEOS_DIR ]]               || mkdir --parents --verbose "${VIDEOS_DIR}"
[[ -r $TRIP_RECORDINGS_DIR ]]      || mkdir --parents --verbose "${TRIP_RECORDINGS_DIR}"
[[ -r $AUDIO_RECORDINGS_DIR ]]     || mkdir --parents --verbose "${AUDIO_RECORDINGS_DIR}"
[[ -r $NOTES_DIR ]]                || mkdir --parents --verbose "${NOTES_DIR}"
[[ -r $SUBS_DIR ]]                 || mkdir --parents --verbose "${SUBS_DIR}"

whitelist1="${DEST_DIR}/blacklists/phonecopy_whitelist.txt"  
blacklist1="${DEST_DIR}/blacklists/pictures_blacklist.txt"    #this contains specific files   pics, vids , etc. 
blacklist2="${DEST_DIR}/blacklists/file_blacklist.txt"        #this containes various file patterns
blacklist3="${DEST_DIR}/blacklists/phonecopy_blacklist.txt"   #this contains various folders and other file patterns on the phone

#these define the exif tags to remove from photos.  
#this will use the program called "exif2" 
#delete or comment out those tags you do not want to remove.  

 
declare -a EXIF_TAGS
EXIF_TAGS=(
Exif.Image.Software
Exif.Image.ImageDescription
Exif.Image.Model
Exif.Image.Make
Exif.Photo.ISOSpeedRatings                  
Exif.Photo.ComponentsConfiguration
Exif.Photo.SubSecTimeDigitized     
Exif.Photo.DigitalZoomRatio        
Exif.Photo.ShutterSpeedValue      
Exif.Photo.MeteringMode           
Exif.Photo.FocalLength            
Exif.Photo.SceneCaptureType       
Exif.Photo.LightSource            
Exif.Photo.MeteringMode           
Exif.Photo.Flash                  
Exif.Photo.SubSecTime             
Exif.Photo.SubSecTimeOriginal     
Exif.Photo.SubSecTimeDigitized    
Exif.Photo.FlashpixVersion        
Exif.Photo.MakerNote
)

echo "now listing all tags that shall be removed from files:"
for tag in ${EXIF_TAGS[@]} ; do 
  echo "$tag"
done



txt_blk='\e[0;30m' # Black - Regular
txt_red='\e[0;31m' # Red
txt_grn='\e[0;32m' # Green
txt_ylw='\e[0;33m' # Yellow
txt_blu='\e[0;34m' # Blue
txt_pur='\e[0;35m' # Purple
txt_cyn='\e[0;36m' # Cyan
txt_wht='\e[0;37m' # White

txt_red_lit='\e[0;91m' # bright Red
txt_grn_lit='\e[0;92m' # bright Green
txt_ylw_lit='\e[0;93m' # bright Yellow
txt_blu_lit='\e[0;94m' # bright Blue
txt_pur_lit='\e[0;95m' # bright Purple
txt_cyn_lit='\e[0;96m' # bright Cyan
txt_non='\e[0m'    # back to default

txt='\e[0;'

c0=$txt_red_lit  #background
c1=$txt_blu_lit  #word 1
c2=$txt_blu      #word 2
c3=$txt_non      #center hyphen

WELCOME_ASCII_ART="
${c0}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
${c0}━━━━${c1}┏━━━┓${c0}━━━━━━━━━━━━━━━━━━━━━━━━${c2}┏━━━┓${c0}━━━━━━━━━━━━━━━━━
${c0}━━━━${c1}┃┏━┓┃${c0}━━━━━━━━━━━━━━━━━━━━━━━━${c2}┃┏━┓┃${c0}━━━━━━━━━━━━━━━━━
${c0}━━━━${c1}┃┗━━┓┏┓${c0}━${c1}┏┓┏━━┓┏━━┓${c0}━━━━━━━━━━━${c2}┃┗━━┓┏━━┓┏┓┏━┓┏━━┓${c0}━━━━
${c0}━━━━${c1}┗━━┓┃┃┃${c0}━${c1}┃┃┃┏┓┃┃┏━┛${c0}━━━${c3}┏━━━┓${c0}━━━${c2}┗━━┓┃┃┏┓┃┣┫┃┏┛┃┏┓┃${c0}━━━━
${c0}━━━━${c1}┃┗━┛┃┃┗━┛┃┃┃┃┃┃┗━┓${c0}━━━${c3}┗━━━┛${c0}━━━${c2}┃┗━┛┃┃┗┛┃┃┃┃┃${c0}━${c2}┃┃━┫${c0}━━━━
${c0}━━━━${c1}┗━━━┛┗━┓┏┛┗┛┗┛┗━━┛${c0}━━━━━━━━━━━${c2}┗━━━┛┃┏━┛┗┛┗┛${c0}━${c2}┗━━┛${c0}━━━━
${c0}━━━━━━━━━${c1}┏━┛┃${c0}━━━━━━━━━━━━━━━━━━━━━━━━━${c2}┃┃${c0}━━━━━━━━━━━━━━━
${c0}━━━━━━━━━${c1}┗━━┛${c0}━━━━━━━━━━━━━━━━━━━━━━━━━${c2}┗┛${c0}━━━━━━━━━━━━━━━
${c0}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 
$txt_non
"




echo -e "Now printing the art:  \n ${WELCOME_ASCII_ART}"


for i in {1..50} ; do 
    x=$(( i % 13 + 1))  
    [[ x -le 7 ]] &&  x=$(( x + 30 )) || x=$(( x + 83 )) 
    echo -e "${txt}${x}m this line is number $x  " 
done
 



echo -e "${txt_grn} here is some green text  echoed by the config file" 
echo -e "${txt_grn_lit} here is some bright green text  echoed by the config file" 
echo -e "${txt_non} here is normal text again"

